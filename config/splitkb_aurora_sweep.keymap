/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define LAYER_0 0
#define LAYER_1 1
#define LAYER_2 2
#define LAYER_3 3
#define LAYER_4 4
#define LAYER_5 5
#define LAYER_6 6
#define LAYER_7 7

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 
behaviors {

		ldt: layer_double_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "LAYER_DOUBLE_TAP";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick-tap-ms = <175>;
			flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
		};
	};
	
        keymap {
                compatible = "zmk,keymap";
                
       		layer_0 {
		bindings = <
		&kp Q &kp W          &kp E          &kp R           &kp T		&kp Y &kp U          &kp I          &kp O          &kp P 
		&kp A &ldt LAYER_4 S &kp D          &ldt LAYER_6 F  &kp G	        &kp H &ldt LAYER_2 J &ldt LAYER_1 K &ldt LAYER_5 L &kp QUOT
		&kp Z &mt LCTRL X    &mt LALT C     &kp V           &kp B		&kp N &kp M          &mt RALT CMMA  &mt RCTRL DOT  &kp SLASH
          			   &mt LSHIFT CAPS &kp SPACE  				&ldt LAYER_3 BSPC &kp ENTER 
		>;
		};

       		layer_1 {
		bindings = <
		&trans    &kp HOME   &kp UP   &kp END   &trans 				&trans &trans    &trans &trans     &trans
		&kp SPACE &kp LEFT   &kp DOWN &kp RIGHT &trans 				&trans &kp RCTRL &trans &kp LSHIFT &trans 
		&trans    &kp PG_UP  &trans   &kp PG_DN &trans				&trans &trans    &trans &trans     &trans 
					      &trans    &trans 				&trans &trans  
		>;
		};
		
		layer_2 {
		bindings = <
		&kp N1    &kp N2 &kp N3 &kp N4   &kp N5					&kp N6 &kp N7 &kp N8   &kp N9    &kp N0
		&kp GRAVE &trans &trans &kp LPAR &kp RPAR				&trans &trans &kp SEMI &kp MINUS &kp EQUAL
		&trans    &trans &trans &trans   &trans		    			&trans &trans &kp LBKT &kp RBKT  &kp BSLH
				          &trans &trans					&kp RSHIFT &trans
		>;
		};	
		
		layer_3 {
		bindings = <
		&kp ESC &trans    &trans &kp F4   &trans				&tog LAYER_7 &trans   &kp UP   &trans    &kp DEL
		&kp TAB &trans    &trans &kp LGUI &trans				&trans &kp LEFT &kp DOWN &kp RIGHT &kp SPACE
		&trans  &kp LCTRL &trans &trans   &trans		    		&trans &kp HOME &trans   &kp END   &trans
				     &kp LSHIFT &kp LALT				&tog LAYER_0 &trans 
		>;
		};
		
		layer_4 {
		bindings = <
		&trans &trans &trans &trans &trans					&kp KP_PLUS  &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MULTIPLY
		&trans &trans &trans &trans &trans					&kp KP_MINUS &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_DIVIDE
		&trans &trans &trans &trans &trans					&kp KP_N0    &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_EQUAL
				 &trans &kp KP_NUM	 				&kp KP_DOT   &kp KP_ENTER
		>;
		};
		
		layer_5 {
		bindings = <
		&kp F1  &kp F2  &kp F3 &kp F4 &kp F5					&trans     &trans     &trans     &trans &trans
		&kp F6  &kp F7  &kp F8 &kp F9 &kp F10					&bt BT_CLR &bt BT_PRV &bt BT_NXT &trans &bt BT_SEL 0
		&kp F11 &kp F12 &trans &trans &trans					&trans     &trans     &trans     &trans &trans
			 	       &trans &trans 					&trans     &trans
		>;
		};
		
		layer_6 {
		bindings = <
		&trans &trans &trans &trans &trans					&trans &kp C_BRI_DN &trans   &kp C_BRI_UP &trans
		&trans &trans &trans &trans &trans					&trans &kp C_PREV   &kp C_PP &kp C_NEXT   &trans
		&trans &trans &trans &trans &trans					&trans &trans       &trans   &trans       &trans
			   &kp C_MUTE &kp C_VOL_DN 					&kp C_VOL_UP &kp C_MUTE
		>;
		};
				
		layer_7 {
		bindings = < 
		&trans &trans &trans &trans &trans					&mo LAYER_3 &trans &trans &trans &kp E,R,F,V,O,L
		&kp Q  &kp W  &kp E  &kp R  &kp T					&kp U       &kp I  &kp O  &kp P     &kp LBKT
		&kp A  &kp S  &kp D  &kp F  &kp G					&kp J       &kp K  &kp L  &kp SEMI  &kp QUOT
			   	     &kp C  &kp V 					&kp N       &kp M
		>;
		};
	};
};
